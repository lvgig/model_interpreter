# This workflow will install the package and dependencies, run tests and lint with a single version of Python

name: Python package build and test

on:
  push:
  pull_request:
    branches:
      - main
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 7 * * 1' # 7:30 on monday morning

jobs:
  build:
    runs-on: "ubuntu-22.04"
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:

      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install uv
          uv venv -p  ${{ matrix.python-version }} ${{ matrix.python-version }}
          source ${{ matrix.python-version }}/bin/activate
          uv pip install -r requirements-dev.txt

      - name: Test with pytest
        if: always()
        run: |
          source ${{ matrix.python-version }}/bin/activate
          pytest . --cov=model_interpreter/ --cov-report=html --cov-config=.coveragerc

      - name: Upload coverage pytest html test results to github
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html-pytest-results
          path: htmlcov

  lint:
    runs-on: "ubuntu-22.04"
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
        - uses: actions/checkout@v3

        - name: Set up Python 3.9
          uses: actions/setup-python@v4
          with:
            python-version: 3.9

        - name: Install ruff
          run: |
            python -m pip install uv
            uv venv -p 3.9 ruff
            source ruff/bin/activate
            uv pip install -r requirements-dev.txt
          
        - name: Lint with ruff
          run: |
            source ruff/bin/activate
            ruff --version
            ruff check --output-format github .

        - name: Check formatting with ruff
          run: |
            source ruff/bin/activate
            ruff --version
            ruff format --diff .
            ruff format --check .
